{"version":3,"sources":["components/EmptyPage/EmptyPage.module.css","components/Navbar/Navbar.jsx","components/EmptyPage/TwoPointPage.jsx","components/EmptyPage/ThreePointPage.jsx","App.js","serviceWorker.js","index.js","components/Navbar/Navbar.module.css"],"names":["module","exports","Navbar","className","s","navbar","logo","backgroundBlock","navbuttonCenter","navLink","to","iconBurger","shape1","shape2","TwoPointPage","getQBezierValue","t","p1","p2","startPointX","startPointY","EndPointX","EndPointY","valuePt1X","valuePt1Y","valuePt2X","valuePt2Y","i","canvasField","event","fieldCoords","document","getElementById","getBoundingClientRect","mouseCoords","top","clientY","clientTop","toFixed","left","clientX","clientLeft","innerHTML","querySelector","remove","position","startPt","x","y","endPt","canvas","createElement","width","height","append","ctx","getContext","moveTo","lineTo","drawNextPoint","console","log","pt","startX","startY","endX","endY","getQuadraticCurvePoint","fillStyle","fillRect","strokeStyle","stroke","beginPath","font","fillText","setTimeout","run","setCoord","buttonId","target","id","fieldValue","result","value","mainPage","mainField","onClick","hint1","button","buttonGroup","inputField","type","ThreePointPage","p3","iT","controlPtX","controlPtY","valuePt3X","valuePt3Y","controlPt","cpX","cpY","quadraticCurveTo","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.da5f23a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"EmptyPage_mainPage__2YoWk\",\"mainField\":\"EmptyPage_mainField__1yTfN\",\"button\":\"EmptyPage_button__27mu-\",\"canvasField\":\"EmptyPage_canvasField__1LJCD\",\"inputField\":\"EmptyPage_inputField__2zpXJ\",\"buttonGroup\":\"EmptyPage_buttonGroup__2qmlk\",\"hint1\":\"EmptyPage_hint1__2fQl9\"};","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport s from './Navbar.module.css';\r\n\r\n\r\nfunction Navbar() {\r\n\r\n    return (\r\n        <div className={s.navbar}>\r\n            <div className={s.logo}>\r\n                <div className={s.backgroundBlock}></div>\r\n            </div>\r\n            <div className={s.navbuttonCenter}>\r\n                <Link className={s.navLink} to={'/twoPointPage'}>two points curve</Link>\r\n                <Link className={s.navLink} to={'/threePointPage'}>Three points curve</Link>\r\n            </div>\r\n            <div className={s.logo}>\r\n                <div className={s.backgroundBlock}>\r\n                    <div className={s.iconBurger}>\r\n                        <div className={s.shape1}></div>\r\n                        <div className={s.shape2}></div>\r\n                        <div className={s.shape1}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar\r\n\r\n","import React from 'react';\r\nimport s from './EmptyPage.module.css';\r\n\r\nexport default function TwoPointPage() {\r\n\r\n    //2 точки P = (1-t)P1 + tP2\r\n    function getQBezierValue(t, p1, p2) {\r\n        let iT = 1 - t;\r\n        return iT * p1 + t * p2;\r\n    }\r\n\r\n    //2 точки\r\n    function getQuadraticCurvePoint(startX, startY, endX, endY, position) {\r\n        return {\r\n            x: getQBezierValue(position, startX, endX),\r\n            y: getQBezierValue(position, startY, endY)\r\n        };\r\n    }\r\n\r\n    //начальные координаты\r\n    let startPointX = 100;\r\n    let startPointY = 30;\r\n    let EndPointX = 50;\r\n    let EndPointY = 100;\r\n\r\n    //присваиваем значениям полей начальные координаты\r\n    let valuePt1X = startPointX\r\n    let valuePt1Y = startPointY\r\n\r\n    let valuePt2X = EndPointX\r\n    let valuePt2Y = EndPointY\r\n\r\n    // hooks для кнопок\r\n    let i = 0\r\n\r\n    let pt1 = function () {\r\n        i = 1\r\n    }\r\n    let pt2 = function () {\r\n        i = 2\r\n    }\r\n\r\n    let canvasField = function (event) {\r\n\r\n        //получение координат\r\n        let fieldCoords = document.getElementById('canvasField').getBoundingClientRect();\r\n        let mouseCoords = {\r\n            top: (event.clientY - fieldCoords.top - document.getElementById('canvasField').clientTop).toFixed(0),\r\n            left: (event.clientX - fieldCoords.left - document.getElementById('canvasField').clientLeft).toFixed(0)\r\n        };\r\n\r\n        //передаём данные с клика\r\n        switch (i) {\r\n            case 0:\r\n                break;\r\n            case 1:\r\n                startPointX = mouseCoords.left\r\n                startPointY = mouseCoords.top\r\n                document.getElementById('resultPt1X').innerHTML = startPointX\r\n                document.getElementById('resultPt1Y').innerHTML = startPointY\r\n                break;\r\n            case 2:\r\n                EndPointX = mouseCoords.left\r\n                EndPointY = mouseCoords.top\r\n                document.getElementById('resultPt2X').innerHTML = EndPointX\r\n                document.getElementById('resultPt2Y').innerHTML = EndPointY\r\n                break;\r\n        }\r\n\r\n        //создаём поле\r\n        if (document.querySelector('canvas') !== null) {\r\n            document.querySelector('canvas').remove()\r\n        }\r\n        let position = 0.0;\r\n        let startPt = { x: startPointX, y: startPointY };\r\n        let endPt = { x: EndPointX, y: EndPointY };\r\n        let canvas = document.createElement(\"canvas\");\r\n        canvas.width = canvas.height = 250;\r\n\r\n        //добавляем поле с canvas в DOM\r\n        document.getElementById('canvasField').append(canvas);\r\n\r\n        let ctx = canvas.getContext(\"2d\");\r\n        //рисуем сетку\r\n        for (let x = 0.5; x < 250; x += 10) {\r\n            ctx.moveTo(x, 0);\r\n            ctx.lineTo(x, 400);\r\n        }\r\n\r\n        for (let y = 0.5; y < 250; y += 10) {\r\n            ctx.moveTo(0, y);\r\n            ctx.lineTo(400, y);\r\n        }\r\n        ctx.strokeStyle = \"#DCDCDC\";\r\n        ctx.stroke();\r\n\r\n        //start-end линия\r\n        ctx.beginPath()\r\n        ctx.strokeStyle = \"DarkGray\";\r\n        ctx.moveTo(startPt.x, startPt.y);\r\n        ctx.lineTo(endPt.x, endPt.y);\r\n        ctx.stroke();\r\n\r\n        //рисуем точки \r\n        ctx.font = \"15px Roboto\";\r\n        ctx.fillText(\"pt1\", startPointX, startPointY - 10);\r\n        ctx.fillText(\"pt2\", EndPointX, EndPointY - 10);\r\n        ctx.fillRect(startPointX - 2.5, startPointY - 2.5, 5, 5)\r\n        ctx.fillRect(EndPointX - 2.5, EndPointY - 2.5, 5, 5)\r\n\r\n        //рисуем засечку\r\n        function drawNextPoint() {\r\n            console.log(position)\r\n            let pt = getQuadraticCurvePoint(startPt.x, startPt.y, endPt.x, endPt.y, position);\r\n            position = (position + 0.04) % 1.0;\r\n\r\n            ctx.fillStyle = \"rgba(255,0,0,0.5)\";\r\n            ctx.fillRect(pt.x - 1.5, pt.y - 1.5, 3, 3,);\r\n        }\r\n\r\n        //запускаем отрисовку засечек\r\n        setTimeout(function run() {\r\n            drawNextPoint();\r\n            if (position < 0.96) {\r\n                setTimeout(run, 100)\r\n            }\r\n        }, 100);\r\n    }\r\n    // получение координат из полей воода\r\n    let setCoord = (event) => {\r\n        let buttonId = event.target.id\r\n        let fieldValue = document.getElementById('value' + buttonId)\r\n        console.log(fieldValue)\r\n        let result = document.getElementById('result' + buttonId)\r\n        result.innerHTML = fieldValue.value;\r\n        console.log(result)\r\n\r\n        switch (buttonId) {\r\n            case 'Pt1X':\r\n                startPointX = fieldValue.value\r\n                break;\r\n            case 'Pt1Y':\r\n                startPointY = fieldValue.value\r\n                break;\r\n            case 'Pt2X':\r\n                EndPointX = fieldValue.value\r\n                break;\r\n            case 'Pt2Y':\r\n                EndPointY = fieldValue.value\r\n                break;\r\n        }\r\n\r\n        i = 0;\r\n        canvasField(event)\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainPage}>\r\n            <div className={s.mainField}>\r\n                <div id={'canvasField'} className={s.canvasField} onClick={canvasField}></div>\r\n            </div>\r\n            <div>\r\n                <p className={s.hint1}>Put a dot on the chart:</p>\r\n                <button id={'button1'} className={s.button} onClick={pt1}>pt1</button>\r\n                <button id={'button2'} className={s.button} onClick={pt2}>pt2</button>\r\n            </div>\r\n            <p className={s.hint1}>Put the coordinates:</p>\r\n            <div className={s.buttonGroup}>\r\n                <input className={s.inputField} type=\"text\" id=\"valuePt1X\" />\r\n                <button id={'Pt1X'} onClick={setCoord} className={s.button}  >Put </button> pt1 X:<span id=\"resultPt1X\">{valuePt1X}</span>\r\n            </div>\r\n            <div className={s.buttonGroup}>\r\n                <input className={s.inputField} type=\"text\" id=\"valuePt1Y\" />\r\n                <button id={'Pt1Y'} onClick={setCoord} className={s.button}  >Put </button> pt1 Y:<span id=\"resultPt1Y\">{valuePt1Y}</span>\r\n            </div>\r\n            -----------------------------------------------------------------------------------------------\r\n            <div className={s.buttonGroup}>\r\n                <input className={s.inputField} type=\"text\" id=\"valuePt2X\" />\r\n                <button id={'Pt2X'} onClick={setCoord} className={s.button}  >Put </button> pt2 X: <span id=\"resultPt2X\">{valuePt2X}</span>\r\n            </div>\r\n            <div className={s.buttonGroup}>\r\n                <input className={s.inputField} type=\"text\" id=\"valuePt2Y\" />\r\n                <button id={'Pt2Y'} onClick={setCoord} className={s.button}  >Put </button> pt2 Y: <span id=\"resultPt2Y\">{valuePt2Y}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './EmptyPage.module.css';\r\n\r\nexport default function ThreePointPage() {\r\n\r\n    //3 точки\r\n    function getQBezierValue(t, p1, p2, p3) {\r\n        let iT = 1 - t;\r\n        return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\r\n    }\r\n\r\n    //3 точки\r\n    function getQuadraticCurvePoint(startX, startY, cpX, cpY, endX, endY, position) {\r\n        return {\r\n            x: getQBezierValue(position, startX, cpX, endX),\r\n            y: getQBezierValue(position, startY, cpY, endY)\r\n        };\r\n    }\r\n\r\n    //начальные координаты\r\n    let startPointX = 100;\r\n    let startPointY = 30;\r\n    let EndPointX = 50;\r\n    let EndPointY = 100;\r\n    let controlPtX = 175;\r\n    let controlPtY = 175;\r\n\r\n    //присваиваем значениям полей начальные координаты\r\n    let valuePt1X = startPointX\r\n    let valuePt1Y = startPointY\r\n\r\n    let valuePt2X = controlPtX\r\n    let valuePt2Y = controlPtY\r\n\r\n    let valuePt3X = EndPointX\r\n    let valuePt3Y = EndPointY\r\n\r\n    // hooks для кнопок\r\n    let i = 0\r\n\r\n    let pt1 = function () {\r\n        i = 1\r\n    }\r\n    let pt2 = function () {\r\n        i = 2\r\n    }\r\n    let pt3 = function () {\r\n        i = 3\r\n    }\r\n\r\n    let canvasField = function (event) {\r\n\r\n        //получение координат\r\n        let fieldCoords = document.getElementById('canvasField').getBoundingClientRect();\r\n        let mouseCoords = {\r\n            top: (event.clientY - fieldCoords.top - document.getElementById('canvasField').clientTop).toFixed(0),\r\n            left: (event.clientX - fieldCoords.left - document.getElementById('canvasField').clientLeft).toFixed(0)\r\n        };\r\n\r\n        //передаём данные с клика\r\n        switch (i) {\r\n            case 0:\r\n                break;\r\n            case 1:\r\n                startPointX = mouseCoords.left\r\n                startPointY = mouseCoords.top\r\n                document.getElementById('resultPt1X').innerHTML = startPointX\r\n                document.getElementById('resultPt1Y').innerHTML = startPointY\r\n                break;\r\n            case 2:\r\n                EndPointX = mouseCoords.left\r\n                EndPointY = mouseCoords.top\r\n                document.getElementById('resultPt2X').innerHTML = EndPointX\r\n                document.getElementById('resultPt2Y').innerHTML = EndPointY\r\n                break;\r\n            case 3:\r\n                controlPtX = mouseCoords.left\r\n                controlPtY = mouseCoords.top\r\n                document.getElementById('resultPt3X').innerHTML = controlPtX\r\n                document.getElementById('resultPt3Y').innerHTML = controlPtY\r\n                break;\r\n        }\r\n\r\n        //создаём поле\r\n        if (document.querySelector('canvas') !== null) {\r\n            document.querySelector('canvas').remove()\r\n        }\r\n        let position = 0.0;\r\n        let startPt = { x: startPointX, y: startPointY };\r\n        let controlPt = { x: controlPtX, y: controlPtY };\r\n        let endPt = { x: EndPointX, y: EndPointY };\r\n        let canvas = document.createElement(\"canvas\");\r\n        canvas.width = canvas.height = 250;\r\n\r\n        //добавляем поле с canvas в DOM\r\n        document.getElementById('canvasField').append(canvas);\r\n\r\n        let ctx = canvas.getContext(\"2d\");\r\n        //рисуем сетку\r\n        for (let x = 0.5; x < 250; x += 10) {\r\n            ctx.moveTo(x, 0);\r\n            ctx.lineTo(x, 400);\r\n        }\r\n\r\n        for (let y = 0.5; y < 250; y += 10) {\r\n            ctx.moveTo(0, y);\r\n            ctx.lineTo(400, y);\r\n        }\r\n        ctx.strokeStyle = \"#DCDCDC\";\r\n        ctx.stroke();\r\n\r\n        //start-end линия\r\n        ctx.beginPath()\r\n        ctx.strokeStyle = \"DarkGray\";\r\n        ctx.moveTo(startPt.x, startPt.y);\r\n        ctx.lineTo(endPt.x, endPt.y);\r\n        ctx.stroke();\r\n\r\n        //control-start линия\r\n        ctx.beginPath()\r\n        ctx.strokeStyle = \"DarkGray\";\r\n        ctx.moveTo(controlPt.x, controlPt.y);\r\n        ctx.lineTo(startPt.x, startPt.y);\r\n        ctx.stroke();\r\n\r\n        //control-end линия\r\n        ctx.beginPath()\r\n        ctx.strokeStyle = \"DarkGray\";\r\n        ctx.moveTo(controlPt.x, controlPt.y);\r\n        ctx.lineTo(endPt.x, endPt.y);\r\n        ctx.stroke();\r\n\r\n        //рисуем точки \r\n        ctx.font = \"15px Roboto\";\r\n        ctx.fillText(\"pt1\", startPointX, startPointY - 10);\r\n        ctx.fillText(\"pt2\", EndPointX, EndPointY - 10);\r\n        ctx.fillText(\"pt3\", controlPtX, controlPtY - 10);\r\n        ctx.fillRect(startPointX - 2.5, startPointY - 2.5, 5, 5)\r\n        ctx.fillRect(EndPointX - 2.5, EndPointY - 2.5, 5, 5)\r\n        ctx.fillRect(controlPtX - 2.5, controlPtY - 2.5, 5, 5)\r\n\r\n        //рисуем засечку\r\n        function drawNextPoint() {\r\n            console.log(position)\r\n            let pt = getQuadraticCurvePoint(startPt.x, startPt.y, controlPt.x, controlPt.y, endPt.x, endPt.y, position);\r\n            position = (position + 0.04) % 1.0;\r\n\r\n            ctx.fillStyle = \"rgba(255,0,0,0.5)\";\r\n            ctx.fillRect(pt.x - 1.5, pt.y - 1.5, 3, 3,);\r\n        }\r\n\r\n        //запускаем отрисовку засечек\r\n        setTimeout(function run() {\r\n            drawNextPoint();\r\n            if (position < 0.96) {\r\n                setTimeout(run, 100)\r\n            } else {\r\n                //рисуем кривую \r\n                let ctx = canvas.getContext(\"2d\");\r\n                ctx.moveTo(startPt.x, startPt.y);\r\n                ctx.quadraticCurveTo(controlPt.x, controlPt.y, endPt.x, endPt.y);\r\n                ctx.stroke();\r\n            }\r\n        }, 100);\r\n    }\r\n    // получение координат из полей воода\r\n    let setCoord = (event) => {\r\n        let buttonId = event.target.id\r\n        let fieldValue = document.getElementById('value' + buttonId)\r\n        console.log(fieldValue)\r\n        let result = document.getElementById('result' + buttonId)\r\n        result.innerHTML = fieldValue.value;\r\n        console.log(result)\r\n\r\n        switch (buttonId) {\r\n            case 'Pt1X':\r\n                startPointX = fieldValue.value\r\n                break;\r\n            case 'Pt1Y':\r\n                startPointY = fieldValue.value\r\n                break;\r\n            case 'Pt2X':\r\n                EndPointX = fieldValue.value\r\n                break;\r\n            case 'Pt2Y':\r\n                EndPointY = fieldValue.value\r\n                break;\r\n            case 'Pt3X':\r\n                controlPtX = fieldValue.value\r\n                break;\r\n            case 'Pt3Y':\r\n                controlPtY = fieldValue.value\r\n                break;\r\n        }\r\n\r\n        i = 0;\r\n        canvasField(event)\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainPage}>\r\n            <div className={s.mainField}>\r\n                <div id={'canvasField'} className={s.canvasField} onClick={canvasField}></div>\r\n            </div>\r\n            <div>\r\n                <p className={s.hint1}>Put a dot on the chart:</p>\r\n                <button id={'button1'} className={s.button} onClick={pt1}>pt1</button>\r\n                <button id={'button2'} className={s.button} onClick={pt2}>pt2</button>\r\n                <button id={'button3'} className={s.button} onClick={pt3}>pt3</button>\r\n            </div>\r\n            <p className={s.hint1}>Put the coordinates:</p>\r\n            <div className={s.buttonGroup}>\r\n                <input className={s.inputField} type=\"text\" id=\"valuePt1X\" />\r\n                <button id={'Pt1X'} onClick={setCoord} className={s.button} >Put </button> pt1 X:<span id=\"resultPt1X\">{valuePt1X}</span>\r\n            </div>\r\n            <div className={s.buttonGroup}>\r\n                <input className={s.inputField} type=\"text\" id=\"valuePt1Y\" />\r\n                <button id={'Pt1Y'} onClick={setCoord} className={s.button}  >Put </button> pt1 Y:<span id=\"resultPt1Y\">{valuePt1Y}</span>\r\n            </div>\r\n            -----------------------------------------------------------------------------------------------\r\n            <div className={s.buttonGroup}>\r\n                <input className={s.inputField} type=\"text\" id=\"valuePt2X\" />\r\n                <button id={'Pt2X'} onClick={setCoord} className={s.button}  >Put </button> pt2 X: <span id=\"resultPt2X\">{valuePt2X}</span>\r\n            </div>\r\n            <div className={s.buttonGroup}>\r\n                <input className={s.inputField} type=\"text\" id=\"valuePt2Y\" />\r\n                <button id={'Pt2Y'} onClick={setCoord} className={s.button}  >Put </button> pt2 Y: <span id=\"resultPt2Y\">{valuePt2Y}</span>\r\n            </div>\r\n            -----------------------------------------------------------------------------------------------\r\n            <div className={s.buttonGroup}>\r\n                <input className={s.inputField} type=\"text\" id=\"valuePt3X\" />\r\n                <button id={'Pt3X'} onClick={setCoord} className={s.button}  >Put </button> pt3 X: <span id=\"resultPt3X\">{valuePt3X}</span>\r\n            </div>\r\n            <div className={s.buttonGroup}>\r\n                <input className={s.inputField} type=\"text\" id=\"valuePt3Y\" />\r\n                <button id={'Pt3Y'} onClick={setCoord} className={s.button}  >Put </button> pt3 Y: <span id=\"resultPt3Y\">{valuePt3Y}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Navbar from './components/Navbar/Navbar';\nimport TwoPointPage from './components/EmptyPage/TwoPointPage';\nimport ThreePointPage from './components/EmptyPage/ThreePointPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\"\n            render={() => <TwoPointPage />} />\n          <Route exact path=\"/line-app\"\n            render={() => <TwoPointPage />} />\n          <Route exact path=\"/twoPointPage\"\n            render={() => <TwoPointPage />} />\n          <Route path=\"/threePointPage\"\n            render={() => <ThreePointPage />} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3LwUF\",\"navbuttonCenter\":\"Navbar_navbuttonCenter__2646k\",\"navLink\":\"Navbar_navLink__33hvW\",\"backgroundBlock\":\"Navbar_backgroundBlock__3kCXQ\",\"iconBurger\":\"Navbar_iconBurger__2DzC8\",\"shape1\":\"Navbar_shape1__3hAK9\",\"shape2\":\"Navbar_shape2__2tOw2\",\"logo\":\"Navbar_logo__1SJbO\"};"],"sourceRoot":""}